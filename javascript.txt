Javascriptda asinxron kodlar yani settimeout, setintervallar callback queda saqlanadi

1 npm nima?
	npm - node package manager Javascript dasturlash tili uchun paket manager hisoblanadi. Unda javascript kodimizni oson ishlatishimiz tayyor kodlar mavjud.
2 Nodejs o'zi nima?
	Javascript kodimizni brauzerdan tashqarida ishlatishimiz uchun run time environment
	(Real timeda ishlovchi muhit) Nodejs brauzerdan tashqarida ishlashi uchun Google chromening 
	V8 enginedan foydalangan. Nodejs non-blocking IO hisoblanadi u libyumizni blocklab qo'ymaydi.
3 V8 engine nima?
	V8 enginimiz Google Chrome tomonidan ishlab chiqilgan va bizning javascript kodimizni 
	mashin kodga o'girib beruvchi divegatel hisoblanadi. Bu Google brauzerida mavjud shuning uchun
	Javascript kodimiz brauzerda ishlaydi.
4 Libuv nima?
	Libuv qisqa qilib aytganda I/O amalga oshirish uchun kutubxona hisoblanadi. 
	Javascript to'g'ridan to'g'ri Operatsion sistemamizga murojat qilolmaydi 
	shuning uchun C da qurilgan libuv orqali operatsion sistemamizga murojat 
	qilsak bo'ladi, file'lar bilan ishlasak bo'ladi, yaratayotgan proektimizni 
	internetga ulanishini ham libuv ta'milab beradi.
?????????
5 Nodejs single threadedmi yo Multi threadedmi?
	Nodejs single threaded lekin u non-blocking I/O hisoblanadi yani asynchron ishlaydi.
6 Single-threded va Multi-Threade farqi nimada?
	Single-threadedda bir vaqtda Event loopimiz faqat bir jarayonni bajaradi yani bitta stackni bajaradi. Multe-threaded esa bir vaqtning o'zida bir nechta stacklarni (jarayonlarni)
	bajaradi
7 Nodejsni qanday qilib Multi-threaded qilishimiz mumkin?
	child-proces module bilan multi-threaded qilishimiz mumkin. SPAN, EXEST, FORK mavjud. SHular orqali biz childlarga bo'lib olishimiz mumkin.
8 Nodejsda Event Loop nima?
	Event loop doimiy aylanib turadi va kodlarimizni, Funksiyalarimizni Call Stakga Variablelarni esa Memory hibga joylab chiqadi. Va shu tarizda u bir client requiestini Threaded 
	Poolga yani FileSystem, Network, Database va hakazolarga Jo'natib va unda responsni olib clientga yuborish uchun doimiy aylanib turivchi loop hisoblanadi.
9 Callback deganda nimani tushunasiz?
	Bitta funksiya bajarilganda boshqa funksiyani return qilishi callback deyiladi.

	function sum(x1, x2) {
		return x1 + x2
	}

	function calc(num1, num2) {
		sum(num1, num2)
	}

	calc(1, 2)

10 Callback hell nima?
	Callback funksiyalarimiz ichma ich bo'p ketishi callback hell hisoblanadi. function ichida yana function va uni ichida if else va hakazolar.
11 Callback helldan qutilish yo'li qanday, yani asynchron kod yozish?
	async await bilan biz callbackdan qutilishimiz mumkin
12 Nodejsda middlewares vazifasi nima?
	Biz clientdan request qabul qilib uni biror bir shart bo'yicha tekshirib agar shartga mos tushsa clientga responseni qaytarib yuborishimizdir. bunda request va response orasida 
	bo'ladi va shart bajarilsa next bo'ladi va response jo'natishimiz mumkin
13 Nodejsda core modullar haqida?
	Nodejsda core modullar libuv ichida mavjud va biz ularni install qilmay turib shunchaki chaqirib ichlatib ketishimiz mumkin. Nodejsda core modullar FS, OS, HTTP, PATH, URL
	shular nodejs core modullar hisoblanadi 
14 FS nima vazifani bajaradi?
	FS file system deyiladi va u bilan biz filelar bilan ishlashimiz mumkin. file yaratish o'chirish, file ichiga ma'lumotlar yozish va hakazolardir (read, write, open, appendFile)
15 OS nima?
	OS operation system deyiladi va u yordamida kompyuterimiz ma'lumotlarini bilishimiz va ular bilan ishlashimiz uchun yordam beradi.
16 HTTP nima?
	HTTP Hypertext Transfer Protocol degan ma'noni anglatadi. Bu WWW (World Wide Web) da audio, video, grafik tasvir, matn va boshqa multimedia fayllari kabi fayllarni uzatish 
	uchun foydalaniladigan qoidalar to'plamidir.  HTTP hech qanday xavfsizlikka ega emas. Qachonki foydalanuvchi o'z veb-brauzerini ochsa, bu foydalanuvchi bilvosita HTTP-dan 
	foydalanadi.
17 PATH nima?
	Path bu bizning qurilmamizdagi filelar turli xil ma'lumotlarning joylashgan o'rni bilan ishlash biror bir proekt qilayotgan bo'lsak shu proekt direktoriyasiga kirib birorta amal
	bajarishimiz uchun ishlatamiz
18 URL nima?
	URL manzil hisoblanadi biror bir manzilga murojat qilishimiz url hisoblanadi. Nodejs url biz biror manzilni faqat hostini yoki pathnameni ajratib olib ishlashimiz uchun 
	kerak hisoblanadi
19 Local modullar nima?
	O'zimiz tomonimizdan birorta module yaratishimiz local module hisoblanadi. masalan FSni function sifatida bir joyda yozib keyin uni ko'p joylarda ishlatishimiz uchun kerak.
20 Stream nima?
	Stream katta ma'lumotlarni bo'lib o'qish bo'lib yozish uchun ishlatiladi. uning readible o'qish, witable yozish, va transform degan methodlari mavjud.
21 QueryString nima?
	Masalan serverimizga so'rov jo'natmoqchi bo'lsak querystringdan foydalanib severga URL orqali so'rov jo'natamiz va so'rovni serverda querystring bilan yechib olib shu so'rov 
	bo'yicha clientga ma'lumot qaytarib yuboramiz
22 Event Listeners nima?
	Event Listeners birornarsani eshitib turib shu bo'yicha biror hodisa bajarish event Listeners deyiladi masalan httpda serverimizni listen qilib tur va serverimiz yonsa consolega 
	nimadir chiqar deyishimiz event Listeners deyiladi.
23 Event Emitter nima?
	Event Emitter bu hodisalarni boshqarish uchun yordam beradi. Masalan sichqonchani uyoqdan bu yoqqa siljitishimizni bir hodisa deb qarasak shu hodisani boshqarish uchun yordam 
	beradi. 
		
		const EventEmitter = require("event")
		const evenetEmitter = new EventEmitter()
		eventEmitter.on('start', number => {
  			console.log(`started ${number}`);
		});

		eventEmitter.emit('start', 23);

24 API nima?
	Application Programming interface - bu ikkita dasturning bir-biri bilan aloqa qilishiga imkon beruvchi dasturiy vositachi hisoblanadi. Asosan server bilan Clientni bog'lab turish 
	uchun dasturiy vositadir
25 HTTP so'rov usullari qaysilar?
	GET so'rovi ma'lum bir URI orqali serverdan ma'lumotlarni olib kelish uchun ishlatiladi
	POST so'rovi serverga ma'lumot yuborish uchun foydalaniladi. Masalan formada user ma'lumotlarini yuborish file yuklash va hakazo.
	HEAD so'rovi GET so'rovi bilan bir xil lekin HEAD da ma'lum ma'lumot yuborishimiz mumkin
	PUT so'rovi serverda bor resurs ma'lumotlarini yangisi bilan almashtirish uchun ishlatiladi
	DELET so'rovi serverda serverda mavjud resurslarni o'chirish uchun ishlatilinadi
	VA HKZLR

****************************************************************************************************************************************************************************************

26 OOP nima?
	Object oriented programming - Objectga asoslanga dasturlash hisoblanadi. Biz tuzayotgan dasturimiz objectlarga, classlarga asoslanadi. Uni 4 ta uslubi mavjud bular. Biz Ikki xil
	dasturlashdan foydalanamiz 1 FP functionla Programming, 2 OOP Object Oriented Programming 
		1 Inheritance
		2 Encapsulation
		3 Abstraction
		4 Polymorphism
27 Inheritance haqida ma'lumot bering?
	Inheritance bu bitta classda shablon yaratib keyin shu shablondan nasl olib  yangi class yaratish hisoblanadi.
	
	class Car {
		constructor(price, color) {
			this.price = price
			this.color = color
		}

		getInfo(){
			return this.color
		}
	}	

	class BMW extend Car {
		constructor(model, price, color){
			super(price, color)
			this.model = model
		}
	}

28 Encapsulation haqida ma'lumot bering?
	class ichida biz methodlarni, ma'lumotlarni yashirib qo'yishimiz mumkin Private qilib ketishimiz mumkin. 
	
  	class Car {
		#klapan = 10
		constructor(price, color) {
			this.price = price
			this.color = color
		}

		getInfo(){
			return this.#klapan
		}
	}	
	
29 Abstraction classimiz qiymat qabul qilib uni ustida ma'lum amallarni bajarib shu ma'lumotni qaytarish. Ma'lumotni abrabotka qilib shu ma'lumotni qaytarish
	getter va setter hisoblanadi. setter ma'lumotni abrabotka qiladi getter esa shu ma'lumotni qaytarish uchun ishlatishimiz mumkin
	
	
	class Car {
		#klapan
		constructor(price, color) {
			this.price = price
			this.color = color
		}

		get info(){
			return this.#klapan
		}

		set info(x) {
			return this.#klapan = x
		}
	}	


	console.log(Car(1000, "Sariq").info("10 lik klapan"))

30 Polymorphism haqida ma'lumot bering? 
	Polymorphism ota super classdan nusxa olgan boshqa bir classni ishlashini o'zgartirishimiz Polymorphisim deyiladi. Masalan bitta Super classimiz Server desak shu classdan boshqa 
	serverlarni nasl olib shu serverlarni bajaradigan vazifasini har xil qilib qo'yishimiz Polymorphism deyiladi

******************************************************************************************************************************************************************************
		
31 Express.js nima?
	Express.js yoki oddiygina Express - bu Node.js uchun bepul, ochiq manbali, engil va tezkor veb-ilovalar tizimi. U MIT litsenziyasi ostida ochiq kodli dasturiy 
	ta'minot sifatida chiqariladi. U bir sahifali, ko'p sahifali va gibrid veb-ilovalar va APIlarni yaratish uchun mo'ljallangan. 
	U Node.js uchun de-fakto standart server ramkasi deb ataladi. U 2010 yilda TJ Holovaychuk tomonidan asos solingan va ishlab chiqilgan va JavaScript-da yozilgan.	

32 Ekspressning o'ziga xos xususiyatlari nimada?
	Express engil, minimal va moslashuvchan Node.js veb-ilovalar ramkasi bo'lgani uchun u veb va mobil ilovalar uchun mustahkam xususiyatlar to'plamini taqdim etadi. 
	Quyida ushbu ramkaning ba'zi o'ziga xos xususiyatlari ro'yxati keltirilgan

	1 js bir sahifali, ko'p sahifali va gibrid veb-ilovalar va API-larni loyihalash uchun ishlatilishi mumkin
	2 Bu HTTP/RESTful so'rovlariga javob berish uchun middlewares dasturni o'rnatish imkonini beradi.
	3 Turli xil HTTP operatsiyalarini (usul va URL) bajarish uchun routerlar bilan ishlashimiz osonlashadi
	4 Bu argumentlarni shablonlarga o'tkazish asosida HTML sahifalarini dinamik ravishda ko'rsatish imkonini beradi
	5 U juda tez I/O kirish/chiqish tufayli yuqori unumdorlikni ta'minlaydi. 
	6 veb-ilovani MVC arxitekturasida tartibga solishga imkon beradi.
	7 U RDBMS va NoSQL ma'lumotlar bazalarini qo'llab-quvvatlaydi
	8 U asinxron va single-threaded
33 Nima uchun biz Express.js dan foydalanamiz?
	Express.js — avtomatik tarzda oldindan tuzilgan Node.js tizimi boʻlib, u bizga server tomonidagi veb-ilovalarni tezroq va aqlliroq yaratishga yordam beradi. 
	Ekspressni tanlashning asosiy sababi uning soddaligi, minimalizmi, moslashuvchanligi va kengaytirilishidir.
34 Express.js va Node.js o'rtasidagi farq nima?
	Node.js brauzerdan tashqari JavaScript kodini bajarish uchun foydalaniladigan ochiq manbali, RUn time environment real vaqtda ishlovchi platformadir. Node.js framework yoki
	dasturlash tili emas; bu veb-server vazifasini bajaradigan platformadir. 

	Express Node.js funksionalligiga asoslangan kichik frameworkdir.

***********************************************************************************************************************************************************************************

NTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT	

	1 OOP
	2 Nodejs
	3 Express
	4 Postgres
	5 Sequileze
	6 Mongodb
	7 Mongoose
	8 Javascript
	9 React 
	10 Typescript

***********************************************************************************************************************************************************************************

1 call nima?
	Bu funksiya methodi. Bunda biz 
	
	const userinfo = {
		name: "Mashrab"
		const fullname = function(age) {
			return this.name
		}
	}

	const name = {
		name: "Tohir"
	}

	userinfo.fullname.call(name, 19)
	userinfo.fullname.bind(name)("19")
	userinfo.fullname.apply(name, [19])



***************************************************************************************************************************************************************************
JAVASCRIPT

1 Data typelar necha turga bo'linadi?
	Data typelarni 2 turi mavjud. Bular Primitive va References typelar.

2 Primitive data typega nimalar kiradi?
	Primitive data typelarga 
		1 String // "Tohir"
		2 Number // 20
		3 Boolean // True or False
		4 BigInt // Katta sonlar uchun
		5 Null // qiymati ataylab bo'sh qoldirilgan. Tayinlangan type ham deyiladi. ildiz bor lekin qiymat yo'q
		6 Undefined // qiymati hali aniqlanmagan. qiymatga undefined tayinlaymiz lekin qiymat hali aniqmas. ildiz ham qiymat ham yo'q
		7 Symbol // bir xil qiymatlarni unique qilib qo'yish yani bir xil qiymatni bir biriga tengmas deb qo'yadi.

		  console.log(Symbol(a) == Symbol(b)); // false qiymati teng emas
		  console.log(Symbol(a) === Symbol(b)); // false type teng lekin qiymat teng emas

3 Reference data typega nimalar kiradi?
	Reference data typega Object kiradi. Object ichida esa, Function, Array, Object kiradi. 

4 Primitive data type bilan Reference data type farqi nimada?
	Primitive data typelarda faqat bitta qiymat saqlanadi va ular to'g'ridan to'g'ri xotirada (Stack) saqlanadi. Reference data type esa 2 va undan ko'p ma'lumotlarni o'zida saqlashi va 	reference data typelar nomi xotirada (Stackda) saqlanadi, heapda esa u typelarni #000, #001, #002 qilib manzil sifatida saqlanadi.  

	let myObj = {name: "Ali"}
	let name = "Ali"
	let myObj2 = myObj

	Stack: 			heap:

		myObj				{
		myObj2				name: "ALi" // myObj va myObj2ning heapdagi manzili bir joyda bo'ladi agar myObj yoki myObj2 ning biror qiymati o'zgartirilsa ikkinchisiga ham 										// birdik ta'sir qiladi
						}

		name = "Ali"
	
5 
		



 

















